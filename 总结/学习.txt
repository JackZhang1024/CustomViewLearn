布局动画
http://www.cnblogs.com/whoislcj/p/5802899.html

音视频学习
https://segmentfault.com/a/1190000013145638

FlexBoxLayout
https://www.cnblogs.com/lynnmn/p/6262941.html
https://www.jianshu.com/p/5ec4350d2258
https://www.jianshu.com/p/b3a9c4a99053
https://github.com/google/flexbox-layout
https://yogalayout.com/docs

布局ZIndex
https://blog.csdn.net/y874961524/article/details/77918116

https://blog.csdn.net/dongbaoming/article/details/54287129

logonSquare json解析快到爆炸
// https://blog.csdn.net/chaoshenzhaoxichao/article/details/79249286
// LoganSquare https://blog.csdn.net/u2014_lyy/article/details/51130546
// https://www.jianshu.com/p/055839b1566a

Path和Paint的介绍
https://blog.csdn.net/mingmingaid/article/details/52461043

// 圆角矩形绘制的时候 边角比较粗的解决方法
// https://blog.csdn.net/kuaiguixs/article/details/78753149

//自定义View教程

// 去掉TextView默认字体的padding
// https://blog.csdn.net/ccpat/article/details/45226951


Drawable drawable = getDrawable();
if(drawable==null || getWidth()==0 || getHeight()==0) {			return;		}
Bitmap b = ((BitmapDrawable)drawable).getBitmap();		canvas.drawBitmap(getRoundedBitmap(b), 0, 0, null);	}
public static Bitmap getRoundedBitmap(Bitmap bitmap){
Bitmap output = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Config.ARGB_8888);
Canvas canvas = new Canvas(output);
final Paint paint = new Paint();
paint.setAntiAlias(true);
paint.setFilterBitmap(true);
paint.setDither(true);
final Rect rect = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());
canvas.drawARGB(0, 0, 0, 0);
canvas.drawCircle(bitmap.getWidth()/2, bitmap.getHeight()/2, bitmap.getHeight()/2, paint);
paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));
canvas.drawBitmap(bitmap, rect, rect, paint);
return output;
}

Path path = new Path();
path.moveTo(0, mTopLeftRadius);
// 圆内切
path.arcTo(new RectF(0, 0, mTopLeftRadius * 2, mTopLeftRadius * 2), -180, 90);
        path.lineTo(width - mTopRightRadius, 0);
        path.arcTo(new RectF(width - 2 * mTopRightRadius, 0, width, mTopRightRadius * 2), -90, 90);

//        path.lineTo(width, height - mBottomRightRadius);
//        path.arcTo(new RectF(width - 2 * mBottomRightRadius, height - 2 * mBottomRightRadius, width, height), 0, 90);

//        path.lineTo(mBottomLeftRadius, height);
//        path.arcTo(new RectF(0, height - 2 * mBottomLeftRadius, mBottomLeftRadius * 2, height), 90, 90);

        //path.close();

圆角处理
https://blog.csdn.net/sinat_31841263/article/details/75669765ListView阻尼效果
//https://blog.csdn.net/jsonnan/article/details/73526783
https://blog.csdn.net/u010731746/article/details/80309326
Google阻尼效果
https://my.oschina.net/oppo4545/blog/260738